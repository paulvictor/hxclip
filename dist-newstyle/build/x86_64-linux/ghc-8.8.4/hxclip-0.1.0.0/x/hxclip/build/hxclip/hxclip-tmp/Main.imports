import Data.Maybe ( fromMaybe )
import System.Environment ( lookupEnv )
import qualified Graphics.X11.Xlib.Display as X
    ( defaultScreen, openDisplay, rootWindow )
import qualified Graphics.X11.Xlib.Atom as X ( internAtom )
import qualified Graphics.X11.Xlib.Window as X
    ( createSimpleWindow )
import qualified Graphics.X11.Xlib.Extras as X
    ( changeProperty8,
      currentTime,
      getEvent,
      getWindowProperty8,
      none,
      propModeReplace,
      setSelectionNotify,
      xConvertSelection,
      xGetSelectionOwner,
      xSetSelectionOwner,
      Event(SelectionRequest) )
import qualified Graphics.X11.Xlib.Event as X
    ( allocaXEvent, get_EventType, nextEvent, sendEvent )
import qualified Graphics.X11.Types as X
    ( Window,
      Atom,
      selectionNotify,
      selectionRequest,
      selectionClear,
      noEventMask )
import qualified Graphics.X11.Xlib.Types as X ( Display )
import qualified Data.ByteString.Char8 as BS ( copy, pack, unpack )
import qualified Crypto.Gpgme as GPG
    ( decrypt,
      encrypt,
      withCtx,
      getKey,
      Ctx,
      Flag(NoFlag),
      IncludeSecret(NoSecret),
      Key,
      Protocol(OpenPGP) )
import Data.IORef ( IORef, newIORef, writeIORef, readIORef )
import Foreign.C.String ( castCCharToChar, castCharToCChar )
import System.IO.Unsafe ( unsafePerformIO )
import Control.Monad ( forever )
import Data.ByteString ( ByteString )
import System.Posix.Signals
    ( installHandler, sigTERM, sigINT, Handler(CatchOnce) )
import System.Exit ( exitSuccess )
import Data.Functor ( void, (<&>) )
import Options.Applicative
    ( fullDesc, info, long, strOption, execParser, Parser )
